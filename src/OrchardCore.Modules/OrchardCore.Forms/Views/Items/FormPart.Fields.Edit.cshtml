@using Microsoft.Extensions.DependencyInjection
@using OrchardCore.Forms.ViewModels
@using OrchardCore.Workflows.Http.Services
@model FormPartEditViewModel

@{
    @* The Forms module does not require the Workflows module so this service may not be available. *@
    var httpRequestEventSecretService = Context.RequestServices.GetService<IHttpRequestEventSecretService>();
}

<div class="form-group">
    <label asp-for="Action">@T["Action"]</label>
    <input type="text" asp-for="Action" class="form-control content-preview-text" />
    <span class="hint">@T["The URL to submit the form to."]</span>
</div>

<div class="form-group">
    <label asp-for="Method">@T["Method"]</label>
    <select asp-for="Method" class="form-control content-preview-select">
        <option value="POST">POST</option>
        <option value="GET">GET</option>
    </select>
    <span class="hint">@T["The HTTP method to use when submitting the form."]</span>
</div>

<div class="form-group">
    <label asp-for="EncType">@T["EncType"]</label>
    <select asp-for="EncType" class="form-control content-preview-select">
        <option value="application/x-www-form-urlencoded">application/x-www-form-urlencoded	</option>
        <option value="multipart/form-data">multipart/form-data</option>
        <option value="text/plain">text/plain</option>
    </select>
    <span class="hint">@T["The enctype to use when submitting the form using POST method."]</span>
</div>

<div class="form-group pb-1">
    <div class="custom-control custom-checkbox">
        <input asp-for="EnableAntiForgeryToken" class="custom-control-input" />
        <label asp-for="EnableAntiForgeryToken" class="custom-control-label">@T["Anti Forgery Token"]</label>
        <span class="hint">@T["Check to generate an Anti Forgery Token in the form."]</span>
    </div>
</div>

@if (httpRequestEventSecretService != null)
{
    <div class="form-group" asp-validation-class-for="HttpRequestEventSecret">
        <div class="w-100 w-md-50">
            <label asp-for="HttpRequestEventSecret">@T["Http request event secret"]</label>
            @await Component.InvokeAsync("SelectSecret", new { secretType = "HttpRequestEventSecret", selectedSecret = Model.HttpRequestEventSecret, htmlName = Html.NameFor(m => m.HttpRequestEventSecret), required  = false})
            <span asp-validation-for="HttpRequestEventSecret"></span>
        </div>
        <span class="hint">@T["The name of the secret for the http request event workflow activity to submit this form to. When provided will override the Action value."]</span>
    </div>
}
